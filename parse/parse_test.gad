// Start
Constant Real TAX_RATE = 0.5
Declare Integer price, quantity, subtotal
Display "Input price:"
Input price
Display "Input quantity:"
Input quantity
Set subtotal = price * quantity
Display "Subtotal:", Tab, subtotal
Display "Total:", Tab, subtotal + subtotal * TAX_RATE
Display


Module Booleans()
Declare Boolean flag
Set flag = price == quantity OR price != quantity
Set flag = price <= quantity AND price < quantity
Set flag = price >= quantity AND price > quantity
Set flag = flag AND flag
Set flag = flag OR flag
Set flag = NOT flag
Input flag
If flag Then
  Display True
Else
  Display False
End If


// Comment 1
// Comment 2


// Comment 3
// Comment 4
If flag Then
  // Comment
  Display True
Else If flag Then
  // Comment
  Display False
End If

If flag Then
  Display True
Else If flag Then
  Display False
Else
  Display False
End If


Select flag
   Case True:
      Display "true"
   Case False:
      Display "false"
End Select
End Module

Module Loops()
Declare Integer count = 1
Select count
   Case 0:
      Display "zero"
   Case 1:
      Display "one"
   Default:
      Display "many"
End Select

While False
  Display "wrong"
End While

Do
  Display "once"
While False

Do
  Display "once"
Until True

For count = 1 To 10
  Display count
End For

For count = 10 To 1 Step -1
  Display count
End For

For count = 0 To 100 Step 10
  Display count
End For

Display -count// explicit no new line
End Module

Module getCups(Real Ref cups)
    Display "Enter the number of cups."
    Input cups
End Module

Module cupsToOunces(Real cups)
    Display "That converts to ", cups * 8, " ounces."
End Module

Call cupsToOunces(8)

Constant Real DISCOUNT_PERCENTAGE = 0.20
Function Real discount(Real price)
	Return price * DISCOUNT_PERCENTAGE
End Function

Display discount(1.0)

Module stringSlice()
	Declare String str = "yes"
	Display str[2]
	Set str[2] = 'p'
	Display str
	Input str[0]
	Display str
	Set "yes"[2] = 'p'
	Display "yes"
End Module

Module arrayDecls(Integer array[], Integer Ref array2[])
	Constant Integer SIZE = 5
	Declare Integer numbers[SIZE]
	Declare Integer numbers2[SIZE] = 1, 2, 3, 4, 5

	Declare String strings[SIZE] = "one", // check
	"two", "three", // interspersed
	// comments
	"four", "five"
	Set strings[0] = strings[1]
	Display strings[0]
	Input strings[0]

	Declare String var
	For Each var In strings
		Display var
	End For

	Declare Integer table[3][4]
	Declare Integer table2[3][4] = // table
		1, 2, 3, 4,
		5, 6, 7, 8,
		9, 10, 11, 12

	Set table[0][0] = table2[1][1]
End Module


// comment 1 at end of file


// comment 2 at end of file
// comment 3 at end of file

